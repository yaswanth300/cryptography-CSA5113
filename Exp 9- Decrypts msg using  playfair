#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define SIZE 5
char matrix[SIZE][SIZE];
void createMatrix(const char *keyword) {
    int used[26] = {0};
    int x = 0, y = 0;
    for (int i = 0; keyword[i]; i++) {
        char ch = toupper(keyword[i]);
        if (ch == 'J') ch = 'I'; // treat J as I
        if (isalpha(ch) && !used[ch - 'A']) {
            matrix[y][x++] = ch;
            used[ch - 'A'] = 1;
            if (x == SIZE) { x = 0; y++; }
        }
    }
    for (char ch = 'A'; ch <= 'Z'; ch++) {
        if (ch == 'J') continue;
        if (!used[ch - 'A']) {
            matrix[y][x++] = ch;
            used[ch - 'A'] = 1;
            if (x == SIZE) { x = 0; y++; }
        }
    }
}
void findPosition(char ch, int *row, int *col) {
    if (ch == 'J') ch = 'I';
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            if (matrix[i][j] == ch) {
                *row = i;
                *col = j;
                return;
            }
        }
    }
}
void decryptPlayfair(const char *ciphertext, char *plaintext) {
    int i = 0, j = 0;
    while (ciphertext[i] && ciphertext[i+1]) {
        char a = toupper(ciphertext[i]);
        char b = toupper(ciphertext[i+1]);
        if (!isalpha(a)) { i++; continue; }
        if (!isalpha(b)) { plaintext[j++] = a; i++; continue; }
        int r1, c1, r2, c2;
        findPosition(a, &r1, &c1);
        findPosition(b, &r2, &c2);
        if (r1 == r2) {
            plaintext[j++] = matrix[r1][(c1 + 4) % SIZE];
            plaintext[j++] = matrix[r2][(c2 + 4) % SIZE];
        } else if (c1 == c2) {
            plaintext[j++] = matrix[(r1 + 4) % SIZE][c1];
            plaintext[j++] = matrix[(r2 + 4) % SIZE][c2];
        } else {
            plaintext[j++] = matrix[r1][c2];
            plaintext[j++] = matrix[r2][c1];
        }
        i += 2;
    }
    plaintext[j] = '\0';
}
void printMatrix() {
    printf("Playfair Matrix:\n");
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            printf("%c ", matrix[i][j]);
        }
        printf("\n");
    }
}
int main() {
    const char *keyword = "CIPHER";
    const char *ciphertext =
        "KXJEYUREBEZWEHEWRYTUHEYFS"
        "KREHEGOYFIWTTTUOLKSYCAJPO"
        "BOTEIZONTXBYBNTGONEYCUZWR"
        "GDSONSXBOUYWRHEBAAHYUSEDQ";
    char plaintext[512];
    createMatrix(keyword);
    printMatrix();
    decryptPlayfair(ciphertext, plaintext);
    printf("\nDecrypted Plaintext:\n%s\n", plaintext);
    return 0;
}
