#include <stdio.h>
#include <string.h>
void xorBlock(unsigned char *block, unsigned char *key, int size) 
{
    for (int i = 0; i < size; i++)
	 {
        block[i] ^= key[i];
    }
}
void encryptCBC(const unsigned char *plaintext, unsigned char *ciphertext, const unsigned char *key, unsigned char *iv, int len) {
    unsigned char block[8];
    for (int i = 0; i < len; i += 8) {
        memcpy(block, plaintext + i, 8);
        xorBlock(block, iv, 8);
        xorBlock(block, (unsigned char *)key, 8);
        memcpy(ciphertext + i, block, 8);
        memcpy(iv, block, 8);
    }
}
int main() {
    unsigned char key[8] = {'m','y','k','e','y','1','2','3'}; 
    unsigned char iv[8] = {0};                                
    unsigned char plaintext[16] = "HelloTestData";      
    unsigned char ciphertext[16];
    encryptCBC(plaintext, ciphertext, key, iv, 16);
    printf("Encrypted (CBC XOR Sim): ");
    for (int i = 0; i < 16; i++) {
        printf("%02X ", ciphertext[i]);
    }
    printf("\n");

    return 0;
}
