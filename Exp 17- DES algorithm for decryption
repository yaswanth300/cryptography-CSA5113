#include <stdio.h>
#include <string.h>

int shift_schedule[16] = {
    1, 1, 2, 2, 2, 2, 2, 2,
    1, 2, 2, 2, 2, 2, 2, 1
};
int PC1[56] = {
    57,49,41,33,25,17,9,
    1,58,50,42,34,26,18,
    10,2,59,51,43,35,27,
    19,11,3,60,52,44,36,
    63,55,47,39,31,23,15,
    7,62,54,46,38,30,22,
    14,6,61,53,45,37,29,
    21,13,5,28,20,12,4
};
int PC2[48] = {
    14,17,11,24,1,5,
    3,28,15,6,21,10,
    23,19,12,4,26,8,
    16,7,27,20,13,2,
    41,52,31,37,47,55,
    30,40,51,45,33,48,
    44,49,39,56,34,53,
    46,42,50,36,29,32
};
void left_rotate(int *half, int shifts) {
    int temp[28];
    for (int i = 0; i < 28; i++)
        temp[i] = half[(i + shifts) % 28];
    for (int i = 0; i < 28; i++)
        half[i] = temp[i];
}
void string_to_bit_array(char *str, int *bits) {
    for (int i = 0; i < 64; i++)
        bits[i] = str[i] - '0'; // Convert '0'/'1' to 0/1
}
void generate_keys(int *key64, int subkeys [16][48]) {
    int permuted_key[56];
    int C[28], D[28];

    for (int i = 0; i < 56; i++)
        permuted_key[i] = key64[PC1[i] - 1];
    for (int i = 0; i < 28; i++) {
        C[i] = permuted_key[i];
        D[i] = permuted_key[i + 28];
    }
    for (int round = 0; round < 16; round++) {
        left_rotate(C, shift_schedule[round]);
        left_rotate(D, shift_schedule[round]);
        int combined [56];
        for (int i = 0; i < 28; i++) {
            combined[i] = C[i];
            combined [i + 28] = D[i];
        }
        for (int i = 0; i < 48; i++)
            subkeys[round][i] = combined[PC2[i] - 1];
    }
}
void print_subkey(int *subkey) {
    for (int i = 0; i < 48; i++)
        printf("%d", subkey[i]);
    printf("\n");
}
int main() {
    char input[65];
    int key64[64];
    int subkeys[16][48];
    printf("Enter 64-bit key as binary (64 characters of 0s and 1s):\n");
    scanf("%64s", input);
    if (strlen(input) != 64) {
        printf("Error: Key must be exactly 64 bits long.\n");
        return 1;
    }
    string_to_bit_array(input, key64);
    generate_keys(key64, subkeys);

    printf("\nDecryption Subkeys (K16 to K1):\n");
    for (int i = 15; i >= 0; i--) {
        printf("K%d: ", 16 - i);
        print_subkey(subkeys[i]);
    }
    return 0;
}
